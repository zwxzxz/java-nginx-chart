apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
    {{- if .Values.isFrontend }}
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: {{ .Release.Name }}
    {{- end }}
  name: {{ .Release.Name }}
  namespace: {{ .Values.nameSpace | default .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  {{- if .Values.strategy }}
  strategy: {{- include "common.tplvalues.render" ( dict "value" .Values.strategy "context" $) | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if or (not .Values.isFrontend) .Values.podAnnotations }}
      annotations:
        {{- if not .Values.isFrontend }}
        prometheus.io/scrape: {{ .Values.metrics.enabled | quote }}
        prometheus.io/path: {{ .Values.metrics.path | quote }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: "{{- if and .Values.image.registry .Values.image.repository -}}{{ .Values.image.registry }}/{{ .Values.image.repository }}{{else}}{{ .Values.image.repository }}{{- end -}}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if not .Values.isFrontend }}
        args:
          - java -jar $JAVA_OPTS app.jar
        command:
          - /bin/bash
          - '-c'
        {{- end}}
        env:
        {{- if not .Values.isFrontend }}
        - name: JAVA_OPTS
          value: -Dserver.port={{ .Values.containerPort | default 8080 }} {{ .Values.JAVA_OPTS }} {{ if .Values.skyWalking.enabled -}}-javaagent:{{ .Values.skyWalking.jarPath}}{{- end -}}
        {{- if .Values.skyWalking.enabled }}
        - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
          value: {{ .Values.skyWalking.oapAdd }}
        - name: SW_AGENT_NAME
          value: {{ .Release.Namespace }}::{{ .Values.name }}
        - name: SW_AGENT_INSTANCE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        {{- end }}
        {{- else }}
        - name: LANG
          value: C.UTF-8
        {{- end}}
        {{- if .Values.env }}
        {{- include "common.tplvalues.render" (dict "value" .Values.env "context" $) | nindent 8 }}
        {{- end }}

        {{- if and .Values.resources (or .Values.resources.requests .Values.resources.limits ) }}
        resources: 
          {{- if .Values.resources.requests }}
          requests: {{- toYaml .Values.resources.requests | nindent 12 }}
          {{- end }}
          {{- if and .Values.resources.limits (not .Values.isFrontend) }}
          limits: {{- toYaml .Values.resources.limits | nindent 12 }}
          {{- end }}
        {{- end }}
        ports:
        - name: http
          {{- if .Values.isFrontend }}
          containerPort: {{ .Values.containerPort | default 80 }}
          {{- else }}
          containerPort: {{ .Values.containerPort | default 8080 }}
          {{- end }}
        {{- if .Values.extraContainerPort }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraContainerPort "context" $) | nindent 8 }}
        {{- end }}

        {{- if .Values.probe }}
        {{- with .Values.probe }}
        {{- if .customStartupProbe }}
        # 容器启动检查探针
        startupProbe: {{- include "common.tplvalues.render" (dict "value" .customStartupProbe "context" $) | nindent 10 }}
        {{- else if and .backend.enabled .backend.startupProbe .backend.startupProbe.enabled (not $.Values.isFrontend) }}
        # 后端容器启动检查探针
        startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .backend.startupProbe "enabled") "context" $) | nindent 10 }}
        {{- else if and .frontend.enabled .frontend.startupProbe .frontend.startupProbe.enabled $.Values.isFrontend }}
        # 前端容器启动检查探针
        startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .frontend.startupProbe "enabled") "context" $) | nindent 10 }}
        {{- end }}

        {{- if .customLivenessProbe }}
        # 容器存活检查探针
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .customLivenessProbe "context" $) | nindent 10 }}
        {{- else if and .backend.enabled .backend.livenessProbe .backend.livenessProbe.enabled (not $.Values.isFrontend) }}
        # 后端容器存活检查探针
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .backend.livenessProbe "enabled") "context" $) | nindent 10 }}
        {{- else if and .frontend.enabled .frontend.livenessProbe .frontend.livenessProbe.enabled $.Values.isFrontend }}
        # 前端容器存活检查探针
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .frontend.livenessProbe "enabled") "context" $) | nindent 10 }}
        {{- end }}

        {{- if .customReadinessProbe }}
        # 容器就绪检查探针
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .customReadinessProbe "context" $) | nindent 10 }}
        {{- else if and .backend.enabled .backend.readinessProbe .backend.readinessProbe.enabled (not $.Values.isFrontend) }}
        # 后端容器就绪检查探针
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .backend.readinessProbe "enabled") "context" $) | nindent 10 }}
        {{- else if and .frontend.enabled .frontend.readinessProbe .frontend.readinessProbe.enabled $.Values.isFrontend }}
        # 前端容器就绪检查探针
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .frontend.readinessProbe "enabled") "context" $) | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- end }}

        {{- if or .Values.mount.volumeMounts (and .Values.skyWalking.enabled (not .Values.isFrontend)) }}
        volumeMounts:
        {{- if .Values.mount.volumeMounts }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.mount.volumeMounts "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.skyWalking.enabled ( not .Values.isFrontend) }}
        - name: skywalking-agent
          mountPath: /skywalking
        {{- end }}
        {{- end }}

      {{- if .Values.image.pullSecret }}
      # 镜像拉取凭证
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if .Values.hostAliases }}
      # 主机别名
      hostAliases:
      {{- include "common.tplvalues.render" ( dict "value" .Values.hostAliases "context" $) | nindent 6 }}
      {{- end }}
      {{- if .Values.tolerations }}
      # 容忍
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 6 }}
      {{- end }}

      {{- if .Values.affinity }}
      # 亲和
      affinity: {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      # 根据节点标签部署服务
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end}}
      {{- if .Values.nodeName }}
      # 根据节点名部署服务(设置了请关闭 节点亲和 和 节点标签选择部署节点)
      nodeName: {{ .Values.nodeName }}
      {{- end }}
      {{- if .Values.dnsConfig }}
      # DNS配置
      dnsConfig: {{- include "common.tplvalues.render" (dict "value" .Values.dnsConfig "context" $) | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      restartPolicy: {{ .Values.restartPolicy }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- if or .Values.mount.volumes (and .Values.skyWalking.enabled (not .Values.isFrontend)) }}
      volumes:
      {{- if .Values.mount.volumes }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.mount.volumes "context" $) | nindent 6 }}
      {{- end }}
      {{- if and .Values.skyWalking.enabled (not .Values.isFrontend) }}
      - name: skywalking-agent
        hostPath:
          path: /skywalking
      {{- end }}
      {{- end }}