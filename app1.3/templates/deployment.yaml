apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
    {{- if .Values.isFrontend }}
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: {{ .Release.Name }}
    {{- end }}
  name: {{ .Release.Name }}
  namespace: {{ .Values.nameSpace | default .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      {{- if or (not .Values.isFrontend) .Values.podAnnotations }}
      annotations:
        {{- if not .Values.isFrontend }}
        prometheus.io/scrape: {{ .Values.metrics.enabled | quote }}
        prometheus.io/path: {{ .Values.metrics.path | quote }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: "{{- if and .Values.image.registry .Values.image.repository -}}{{ .Values.image.registry}}/{{ .Values.image.repository }}{{else}}{{ .Values.image.repository }}{{- end -}}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if not .Values.isFrontend }}
        args:
          - java -jar $JAVA_OPTS app.jar
        command:
          - /bin/bash
          - '-c'
        {{- end}}
        env:
        {{- if not .Values.isFrontend }}
        - name: JAVA_OPTS
          value: -Dserver.port={{ .Values.containerPort | default 8080 }} {{ .Values.JAVA_OPTS }}
        {{- else }}
        - name: LANG
          value: C.UTF-8
        {{- end}}
        {{- if .Values.env }}
        {{- include "common.tplvalues.render" (dict "value" .Values.env "context" $) | nindent 8 }}
        {{- end }}

        {{- if and .Values.resources (or .Values.resources.requests .Values.resources.limits ) }}
        resources: 
          {{- if .Values.resources.requests }}
          requests: {{- toYaml .Values.resources.requests | nindent 12 }}
          {{- end }}
          {{- if and .Values.resources.limits (not .Values.isFrontend) }}
          limits: {{- toYaml .Values.resources.limits | nindent 12 }}
          {{- end }}
        {{- end }}
        ports:
        - name: http
          {{- if .Values.isFrontend }}
          containerPort: {{ .Values.containerPort | default 80 }}
          {{- else }}
          containerPort: {{ .Values.containerPort | default 8080 }}
          {{- end }}
        {{- if .Values.extraContainerPort }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraContainerPort "context" $) | nindent 8 }}
        {{- end }}

        {{- if and .Values.probe .Values.probe.enabled (not .Values.isFrontend) }}
        {{- with .Values.probe }}
        {{- if .customStartupProbe }}
        # 容器启动检查探针
        startupProbe: {{- include "common.tplvalues.render" (dict "value" .customStartupProbe "context" $) | nindent 10 }}
        {{- else if and .startupProbe .startupProbe.enabled }}
        # 容器启动检查探针
        startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .startupProbe "enabled") "context" $) | nindent 10 }}
        {{- end }}

        {{- if .customLivenessProbe }}
        # 容器存活检查探针
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .customLivenessProbe "context" $) | nindent 10 }}
        {{- else if and .livenessProbe .livenessProbe.enabled }}
        # 容器存活检查探针
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .livenessProbe "enabled") "context" $) | nindent 10 }}
        {{- end }}

        {{- if .customReadinessProbe }}
        # 容器就绪检查探针
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .customReadinessProbe "context" $) | nindent 10 }}
        {{- else if and .readinessProbe .readinessProbe.enabled }}
        # 容器就绪检查探针
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .readinessProbe "enabled") "context" $) | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- end }}

        {{- if .Values.mount.volumeMounts }}
        volumeMounts:
        {{- include "common.tplvalues.render" ( dict "value" .Values.mount.volumeMounts "context" $) | nindent 8 }}
        {{- end }}

      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases:
      {{- include "common.tplvalues.render" ( dict "value" .Values.hostAliases "context" $) | nindent 6 }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.mount.volumes }}
      volumes:
      {{- include "common.tplvalues.render" ( dict "value" .Values.mount.volumes "context" $) | nindent 6 }}
      {{- end }}